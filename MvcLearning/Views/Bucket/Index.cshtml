@using MvcLearning.Data.Entities
@model Bucket

@{
	ViewData["Title"] = "Your Cart";
	var isEmpty = Model.BucketProducts == null || !Model.BucketProducts.Any();
}

<h2>Your Cart</h2>

@if (TempData["SuccessMessage"] != null)
{
	<div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
else if (TempData["ErrorMessage"] != null)
{
	<div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@if (isEmpty)
{
	<p>Your cart is empty.</p>
}
else
{
	<table class="table table-striped">
		<thead>
			<tr>
				<th>Product</th>
				<th>Description</th>
				<th>Price</th>
				<th>Quantity</th>
				<th>Subtotal</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody id="cart-body">
			@foreach (var item in Model.BucketProducts)
			{
				var product = item.Product;
				if (product == null) continue;

				<tr data-product-id="@product.Id">
					<td><a asp-controller="Product" asp-action="Details" asp-route-productId="@product.Id">@product.Name</a></td>
					<td>@product.Description</td>
					<td>@product.Price.ToString("C")</td>
					<td>
						<div class="input-group input-group-sm w-50">
							<button class="btn btn-outline-secondary qty-btn" data-action="decrease">−</button>
							<input type="number" class="form-control qty-input" value="@item.Quantity" min="1" />
							<button class="btn btn-outline-secondary qty-btn" data-action="increase">+</button>
						</div>
					</td>
					<td class="subtotal">@((product.Price * item.Quantity).ToString("C"))</td>
					<td>
						<form asp-action="RemoveFromBucket" method="post" class="d-inline">
							<input type="hidden" name="productId" value="@product.Id" />
							<button type="submit" class="btn btn-sm btn-danger">Remove</button>
						</form>
					</td>
				</tr>
			}
		</tbody>
	</table>

	<div class="mt-4">
		<strong>Total:</strong> <span id="total-price">@Model.BucketProducts.Sum(p => (p.Product?.Price ?? 0) * p.Quantity).ToString("C")</span>
	</div>

	<form asp-action="Create" asp-controller="Order" method="post" class="mt-3">
		<button type="submit" class="btn btn-success">Place Order</button>
	</form>
}

<a asp-action="Index" asp-controller="Home" class="btn btn-outline-primary mt-3">Back to Home</a>


@section Scripts {
	<script>
		document.querySelectorAll('.qty-btn').forEach(btn => {
			btn.addEventListener('click', () => {
				const row = btn.closest('tr');
				const input = row.querySelector('.qty-input');
				const productId = row.dataset.productId;
				const action = btn.dataset.action;

				let current = parseInt(input.value);
				if (action === 'increase') current++;
				else if (action === 'decrease') current = Math.max(1, current - 1);

				input.value = current;
				updateQuantity(productId, current, row);
			});
		});

		document.querySelectorAll('.qty-input').forEach(input => {
			input.addEventListener('change', () => {
				const row = input.closest('tr');
				const productId = row.dataset.productId;
				let newQty = parseInt(input.value);
				if (isNaN(newQty) || newQty < 1) {
					newQty = 1;
					input.value = newQty;
				}
				updateQuantity(productId, newQty, row);
			});
		});

		async function updateQuantity(productId, quantity, row) {
			const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
			const response = await fetch('/Bucket/UpdateQuantityExact', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'RequestVerificationToken': token
				},
				body: JSON.stringify({ productId, quantity })
			});

			if (response.ok) {
				const data = await response.json();
				row.querySelector('.qty-input').value = data.quantity;
				row.querySelector('.subtotal').textContent = data.subtotal;
				document.getElementById('total-price').textContent = data.total;
			} else {
				alert("Failed to update quantity");
			}
		}
	</script>
}
